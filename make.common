OCAMLC     = OCAMLPATH=$(OCAMLPATH) ocamlfind ocamlc -thread -rectypes
OCAMLOPT   = OCAMLPATH=$(OCAMLPATH) ocamlfind ocamlopt -thread -rectypes
OCAMLDEP   = OCAMLPATH=$(OCAMLPATH) ocamlfind ocamldep
OCAMLMKTOP = OCAMLPATH=$(OCAMLPATH) ocamlfind ocamlmktop -thread -rectypes
INCS       =
OCAMLOPTFLAGS = $(INCS) -w Ae -g
OCAMLFLAGS    = $(INCS) -w Ae -g

CAMLINCLUDE = $(shell ocamlfind printconf stdlib)
CPPFLAGS += -I $(CAMLINCLUDE) -I .
CFLAGS += -std=c99 -W -Wall

ML_OBJS  = $(ML_SOURCES:.ml=.cmo)
ML_XOBJS = $(ML_SOURCES:.ml=.cmx)

# Common rules
.SUFFIXES: .ml .mli .cmo .cmi .cmx
# Rules for these are given in a case by case basis
.SUFFIXES: .byte .opt

.ml.cmo:
	$(OCAMLC) -package "$(REQUIRES)" $(OCAMLFLAGS) -c $<

.mli.cmi:
	$(OCAMLC) -package "$(REQUIRES)" $(OCAMLFLAGS) -c $<

.ml.cmx:
	$(OCAMLOPT) -package "$(REQUIRES)" $(OCAMLOPTFLAGS) -c $<

.cmo.byte:
	$(OCAMLC)   -o $@ -package "$(REQUIRES)" -linkpkg $(OCAMLFLAGS) toplevellib.cma $^

.cmx.opt:
	$(OCAMLOPT) -o $@ -package "$(REQUIRES)" -linkpkg $(OCAMLOPTFLAGS) $^

# Clean up
.PHONY: clean clean-spec
clean: clean-spec
	rm -f *.cm[ioxa] *.cmxa *.a *.s *.o *.byte *.opt .depend

# Dependencies
.depend: $(ML_SOURCES) $(C_SOURCES)
	$(OCAMLDEP) -package "$(REQUIRES)" -I .. $(ML_SOURCES) > $@
ifdef C_SOURCES
	$(CC) -M $(CPPFLAGS) $(C_SOURCES) >> $@
endif
